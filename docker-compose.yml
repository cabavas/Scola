services:
  # Laravel Application
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: laravel-app
    restart: unless-stopped
    working_dir: /var/www
    environment:
      - WWWUSER=${UID}
      - WWWGROUP=${GID}
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - laravel-network

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: laravel-nginx
    restart: unless-stopped
    ports:
      - "8000:80"  # Changed to explicit 8000:80 mapping
    volumes:
      - ./:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - laravel-network

  # MySQL Database
  db:
    image: mysql:8.0
    container_name: laravel-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: scola
      MYSQL_ROOT_PASSWORD: '@#Lolo3105#@'
    ports:
      - "3306:3306"  # Changed to different port
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - laravel-network

  # Node.js for frontend assets
  node:
    image: node:20
    container_name: laravel-node
    working_dir: /var/www
    volumes:
      - ./:/var/www
    command: npm run dev -- --host
    ports:
      - "5173:5173"
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - laravel-network
  
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: laravel-phpmyadmin
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: '@#Lolo3105#@'
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - laravel-network

networks:
  laravel-network:
    driver: bridge

volumes:
  mysql-data: